[10/05 18:55:54] demo INFO: Namespace(cfg='/home/kwanghun/Kwanghun/Tasks/DeepLearning/panoptic-deeplab/configs/panoptic_deeplab_X65_os32_cityscapes_lr_x10.yaml', extension='.png', input_files='/home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/Yolo/SNU_Samples//capture_2.png', merge_image=True, opts=['TEST.MODEL_FILE', '/home/kwanghun/Kwanghun/Tasks/DeepLearning/panoptic-deeplab/models/panoptic_deeplab_X65_os32_cityscapes_lr_x10.pth'], output_dir='/home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/SemanticSegmentation/TestSNU/capture_2/1')
[10/05 18:55:54] demo INFO: CKPT_FREQ: 5000
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATALOADER:
  NUM_WORKERS: 4
  SAMPLER_TRAIN: TrainingSampler
  TRAIN_SHUFFLE: True
DATASET:
  CROP_SIZE: (1025, 2049)
  DATASET: cityscapes_panoptic
  IGNORE_STUFF_IN_OFFSET: True
  MAX_RESIZE_VALUE: -1
  MAX_SCALE: 2.0
  MEAN: (0.5, 0.5, 0.5)
  MIN_RESIZE_VALUE: -1
  MIN_SCALE: 0.5
  MIRROR: True
  NUM_CLASSES: 19
  RESIZE_FACTOR: -1
  ROOT: ./datasets/cityscapes
  SCALE_STEP_SIZE: 0.1
  SEMANTIC_ONLY: False
  SMALL_INSTANCE_AREA: 4096
  SMALL_INSTANCE_WEIGHT: 3
  STD: (0.5, 0.5, 0.5)
  TEST_SPLIT: val
  TRAIN_SPLIT: train
DEBUG:
  DEBUG: True
  DEBUG_FREQ: 100
  KEEP_INTERVAL: 1000
  OUTPUT_KEYS: ('semantic', 'center', 'offset')
  TARGET_KEYS: ('semantic', 'center', 'offset', 'semantic_weights', 'center_weights', 'offset_weights')
GPUS: (0, 1, 2, 3, 4, 5, 6, 7)
LOSS:
  CENTER:
    NAME: mse
    REDUCTION: none
    WEIGHT: 200.0
  FOREGROUND:
    IGNORE: 255
    MIN_KEPT: 100000
    NAME: cross_entropy
    REDUCTION: mean
    THRESHOLD: 0.7
    TOP_K_PERCENT: 1.0
    WEIGHT: 1.0
  OFFSET:
    NAME: l1
    REDUCTION: none
    WEIGHT: 0.01
  SEMANTIC:
    IGNORE: 255
    MIN_KEPT: 100000
    NAME: hard_pixel_mining
    REDUCTION: mean
    THRESHOLD: 0.7
    TOP_K_PERCENT: 0.2
    WEIGHT: 1.0
MODEL:
  BACKBONE:
    DILATION: (False, False, False)
    META: xception
    NAME: xception65
    PRETRAINED: True
    WEIGHTS: 
  BN_MOMENTUM: 0.001
  DECODER:
    ATROUS_RATES: (3, 6, 9)
    CONV_KERNEL: 5
    CONV_PADDING: 2
    CONV_STACK: 1
    CONV_TYPE: depthwise_separable_conv
    DECODER_CHANNELS: 256
    FEATURE_KEY: res5
    IN_CHANNELS: 2048
  DEEPLABV3PLUS:
    LOW_LEVEL_CHANNELS: 256
    LOW_LEVEL_CHANNELS_PROJECT: 48
    LOW_LEVEL_KEY: res2
  META_ARCHITECTURE: panoptic_deeplab
  PANOPTIC_DEEPLAB:
    INSTANCE:
      ASPP_CHANNELS: 256
      CLASS_KEY: ('center', 'offset')
      DECODER_CHANNELS: 128
      ENABLE: True
      FOREGROUND_ARCH: v1
      FOREGROUND_SEG: False
      HEAD_CHANNELS: 32
      LOW_LEVEL_CHANNELS_PROJECT: (64, 32, 16)
      NUM_CLASSES: (1, 2)
    LOW_LEVEL_CHANNELS: (728, 728, 256)
    LOW_LEVEL_CHANNELS_PROJECT: (128, 64, 32)
    LOW_LEVEL_KEY: ('res4', 'res3', 'res2')
  WEIGHTS: 
OUTPUT_DIR: ./output/panoptic_deeplab_X65_os32_cityscapes_lr_x10
POST_PROCESSING:
  CENTER_THRESHOLD: 0.1
  NMS_KERNEL: 7
  STUFF_AREA: 2048
  TOP_K_INSTANCE: 200
PRINT_FREQ: 20
SOLVER:
  ADAM_BETAS: (0.9, 0.999)
  ADAM_EPS: 1e-08
  BASE_LR: 0.0005
  BIAS_LR_FACTOR: 1.0
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  LR_SCHEDULER_NAME: WarmupPolyLR
  MOMENTUM: 0.9
  OPTIMIZER: adam
  POLY_LR_CONSTANT_ENDING: 0
  POLY_LR_POWER: 0.9
  STEPS: (30000,)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 0
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0
  WEIGHT_DECAY_BIAS: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  CROP_SIZE: (1025, 2049)
  DEBUG: False
  EVAL_FOREGROUND: False
  EVAL_INSTANCE: True
  EVAL_PANOPTIC: True
  FLIP_TEST: False
  FOREGROUND_FOLDER: foreground
  GPUS: (0,)
  INSTANCE_FOLDER: instance
  INSTANCE_SCORE_TYPE: semantic
  MODEL_FILE: /home/kwanghun/Kwanghun/Tasks/DeepLearning/panoptic-deeplab/models/panoptic_deeplab_X65_os32_cityscapes_lr_x10.pth
  ORACLE_CENTER: False
  ORACLE_FOREGROUND: False
  ORACLE_OFFSET: False
  ORACLE_SEMANTIC: False
  PANOPTIC_FOLDER: panoptic
  SCALE_LIST: [1]
  SEMANTIC_FOLDER: semantic
  TEST_TIME_AUGMENTATION: False
TRAIN:
  IMS_PER_BATCH: 8
  MAX_ITER: 90000
  RESUME: False
WORKERS: 1
[10/05 18:55:54] demo INFO: Model:
PanopticDeepLab(
  (backbone): Xception65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(2048, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (decoder): PanopticDeepLabDecoder(
    (semantic_decoder): SinglePanopticDeepLabDecoder(
      (aspp): ASPP(
        (convs): ModuleList(
          (0): Sequential(
            (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (2): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (3): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(9, 9), dilation=(9, 9), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (4): ASPPPooling(
            (aspp_pooling): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (2): ReLU()
            )
          )
        )
        (project): Sequential(
          (0): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.5, inplace=False)
        )
      )
      (project): ModuleList(
        (0): Sequential(
          (0): Conv2d(728, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): Conv2d(728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (fuse): ModuleList(
        (0): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(384, 384, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=384, bias=False)
              (1): BatchNorm2d(384, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
        (1): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False)
              (1): BatchNorm2d(320, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
        (2): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
      )
    )
    (semantic_head): SinglePanopticDeepLabHead(
      (classifier): ModuleDict(
        (semantic): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (2): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (3): ReLU()
            )
          )
          (1): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (instance_decoder): SinglePanopticDeepLabDecoder(
      (aspp): ASPP(
        (convs): ModuleList(
          (0): Sequential(
            (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (2): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (3): ASPPConv(
            (0): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(9, 9), dilation=(9, 9), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (4): ASPPPooling(
            (aspp_pooling): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (2): ReLU()
            )
          )
        )
        (project): Sequential(
          (0): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Dropout(p=0.5, inplace=False)
        )
      )
      (project): ModuleList(
        (0): Sequential(
          (0): Conv2d(728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): Conv2d(728, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (fuse): ModuleList(
        (0): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False)
              (1): BatchNorm2d(320, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
        (1): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False)
              (1): BatchNorm2d(160, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
        (2): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(144, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (2): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (3): ReLU()
          )
        )
      )
    )
    (instance_head): SinglePanopticDeepLabHead(
      (classifier): ModuleDict(
        (center): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (3): ReLU()
            )
          )
          (1): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
        )
        (offset): Sequential(
          (0): Sequential(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (2): BatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
              (3): ReLU()
            )
          )
          (1): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (semantic_loss): DeepLabCE(
    (criterion): CrossEntropyLoss()
  )
  (center_loss): MSELoss()
  (offset_loss): L1Loss()
)
[10/05 18:55:56] demo WARNING: Cannot build data loader, using default meta data. This will disable visualizing intermediate outputs
[10/05 18:55:56] demo INFO: Test model loaded from /home/kwanghun/Kwanghun/Tasks/DeepLearning/panoptic-deeplab/models/panoptic_deeplab_X65_os32_cityscapes_lr_x10.pth
[10/05 18:55:56] demo INFO: Inference on images
[10/05 18:55:56] demo INFO: ['/home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/Yolo/SNU_Samples//capture_2.png']
[10/05 18:55:57] demo INFO: [0/1]	Network Time: 0.720s (0.720s)	Post-processing Time: 0.048s (0.048s)	
[10/05 18:55:59] demo INFO: Demo finished.
[10/05 18:55:59] demo INFO: Semantic predictions saved to /home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/SemanticSegmentation/TestSNU/capture_2/1/semantic
[10/05 18:55:59] demo INFO: Instance predictions saved to /home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/SemanticSegmentation/TestSNU/capture_2/1/instance
[10/05 18:55:59] demo INFO: Panoptic predictions saved to /home/kwanghun/Kwanghun/Tasks/DeepLearning/lelab/Data/SemanticSegmentation/TestSNU/capture_2/1/panoptic
